name: Build and Publish CommandSage

on:
  push:
    branches:
      - main

jobs:
  build-and-upload:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Run Tests
        run: node cmdsage.js test

      - name: Extract Addon Version
        id: extract_version
        run: |
          VERSION_LINE=$(grep -m1 -oP '(?<=Version-).*(?=-blue)' README.md || echo "4.3")
          echo "addon_version=$VERSION_LINE" >> $GITHUB_OUTPUT

      - name: Update TOC Version
        run: |
          echo "Detected version: ${{ steps.extract_version.outputs.addon_version }}"
          sed -i "s/## Version: .*/## Version: ${{ steps.extract_version.outputs.addon_version }}/" CommandSage.toc

      - name: Build Addon
        run: node cmdsage.js build

      - name: Package Addon
        run: |
          mkdir -p dist
          zip -r dist/CommandSage-${{ steps.extract_version.outputs.addon_version }}.zip . \
            -x "*.git*" \
            -x ".github*" \
            -x "scripts/*" \
            -x "dist/*" \
            -x "tests/*"

      - name: Upload artifact to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: CommandSage-Zip
          path: dist/CommandSage-${{ steps.extract_version.outputs.addon_version }}.zip

      - name: Publish to CurseForge
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')
        env:
          CURSEFORGE_PROJECT_ID: ${{ secrets.CURSEFORGE_PROJECT_ID }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
        run: |
          echo "Publishing to CurseForge..."
          curl -v -X POST "https://api.curseforge.com/v1/projects/${CURSEFORGE_PROJECT_ID}/upload-file" \
            -H "x-api-token: ${CURSEFORGE_TOKEN}" \
            -F "metadata={\"releaseType\":\"release\",\"changelog\":\"Automated release from GitHub Actions\",\"gameVersions\":[\"classic\"],\"displayName\":\"CommandSage-${{ steps.extract_version.outputs.addon_version }}\"}" \
            -F "file=@dist/CommandSage-${{ steps.extract_version.outputs.addon_version }}.zip"
