name: Release Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Install Dependencies
        run: npm ci
      - name: Install Linux Test Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y luarocks lua5.3 lua5.3-dev
          luarocks install busted --local
          echo "$HOME/.luarocks/bin" >> $GITHUB_PATH
      - name: Run Tests
        run: node cmdsage-cli.js test
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  build-and-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: semantic-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Install Dependencies
        run: npm ci
      - name: Install Linux Test Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y luarocks lua5.3 lua5.3-dev
          luarocks install busted --local
          echo "$HOME/.luarocks/bin" >> $GITHUB_PATH
      - name: Run Tests
        run: node cmdsage-cli.js test
      - name: Extract Version from Tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "addon_version=$VERSION" >> $GITHUB_OUTPUT
      - name: Update TOC Version
        run: |
          echo "Updating TOC to version: ${{ steps.extract_version.outputs.addon_version }}"
          sed -i "s/## Version: .*/## Version: ${{ steps.extract_version.outputs.addon_version }}/" CommandSage.toc
      - name: Run Full Release
        env:
          ADDON_VERSION: ${{ steps.extract_version.outputs.addon_version }}
          CURSEFORGE_PROJECT_ID: ${{ secrets.CURSEFORGE_PROJECT_ID }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
        run: node cmdsage-cli.js release
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: CommandSage-Zip
          path: dist/CommandSage-${{ steps.extract_version.outputs.addon_version }}.zip
